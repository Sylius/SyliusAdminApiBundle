name: Build

on:
    push:
        branches-ignore:
            - 'dependabot/**'
    pull_request: ~
    release:
        types: [created]
    workflow_dispatch: ~

jobs:
    tests:
        runs-on: ubuntu-latest

        name: "PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}, MySQL ${{ matrix.mysql }}, Sylius ${{ matrix.sylius }}"

        timeout-minutes: 30

        strategy:
            fail-fast: false
            matrix:
                php: ["8.0"]
                symfony: ["^5.4", "^6.0"]
                sylius: ["1.11.*", "1.12.*"]
                node: ["16.x"]
                mysql: ["8.0"]

        env:
            APP_ENV: test_cached
            DATABASE_URL: "mysql://root:root@127.0.0.1/sylius?serverVersion=${{ matrix.mysql }}"

        steps:
            -
                uses: actions/checkout@v3

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    extensions: intl
                    tools: symfony
                    coverage: none

            -
                name: Setup Node
                uses: actions/setup-node@v2
                with:
                    node-version: "${{ matrix.node }}"

            -
                name: Shutdown default MySQL
                run: sudo service mysql stop

            -
                name: Setup MySQL
                uses: mirromutth/mysql-action@v1.1
                with:
                    mysql version: "${{ matrix.mysql }}"
                    mysql root password: "root"

            -
                name: Get Composer cache directory
                id: composer-cache
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            -
                name: Cache Composer
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-composer-

            -
                name: Restrict Symfony version
                if: matrix.symfony != ''
                run: |
                    composer global config --no-plugins allow-plugins.symfony/flex true
                    composer global require --no-progress --no-scripts --no-plugins "symfony/flex:^1.10"
                    composer config extra.symfony.require "${{ matrix.symfony }}"

            -
                name: Restrict Sylius version
                if: matrix.sylius != ''
                run: composer require "sylius/sylius:${{ matrix.sylius }}" --no-update --no-scripts --no-interaction

            -
                name: Install PHP dependencies
                run: composer install --no-interaction --no-scripts

            -
                name: Get Yarn cache directory
                id: yarn-cache
                run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

            -
                name: Cache Yarn
                uses: actions/cache@v3
                with:
                    path: ${{ steps.yarn-cache.outputs.dir }}
                    key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/package.json **/yarn.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-node-${{ matrix.node }}-yarn-

            -
                name: Install JS dependencies
                run: (cd tests/Application && yarn install)

            -
                name: Build assets
                run: (cd tests/Application && yarn encore prod)

            -   name: Check out database schema update
                run: |
                    (cd tests/Application && bin/console doctrine:database:create)
                    (cd tests/Application && bin/console doctrine:schema:update --force)
                    (cd tests/Application && bin/console doctrine:schema:validate)
                    (cd tests/Application && bin/console doctrine:database:drop --force)

            -
                name: Prepare test application database
                run: |
                    (cd tests/Application && bin/console doctrine:database:create -vvv)
                    (cd tests/Application && bin/console doctrine:migrations:migrate -n -vvv)

            -
                name: Prepare test application cache
                run: (cd tests/Application && bin/console cache:warmup -vvv)

            -
                name: Load fixtures in test application
                run: (cd tests/Application && bin/console sylius:fixtures:load -n)

            -
                name: Validate composer.json
                run: composer validate --ansi --strict

            -
                name: Run Psalm
                run: vendor/bin/psalm

            -
                name: Run PHPSpec
                run: vendor/bin/phpspec run --ansi -f progress --no-interaction

            -
                name: Run PHPUnit
                run: vendor/bin/phpunit --colors=always
